
1. What are the details of all customers whose country is 'Spain'?

SELECT * 
FROM Customers
WHERE Country = 'Spain';

2. What are the distinct cities of customers from Germany with a city containing the letter 'B'?

SELECT DISTINCT City 
FROM Customers 
WHERE Country = 'Germany' 
AND City LIKE '%B%';

3. What are the number of orders placed by each customer? Sort the result by the number of orders in descending order.

SELECT 
    CustomerID, 
    COUNT(OrderID) AS OrderCount
FROM Orders
GROUP BY CustomerID
ORDER BY OrderCount DESC;

4. What are the customers who have placed more than 3 orders?

SELECT 
    CustomerID, 
    COUNT(OrderID) AS OrderCount
FROM Orders
GROUP BY CustomerID
HAVING COUNT(OrderID) > 3;

5. What are the top 5 most expensive products? Round the price to 2 decimal places.

SELECT 
    ProductName, 
    ROUND(CAST(Price AS NUMERIC), 2) AS Price
FROM Products
ORDER BY Price DESC
LIMIT 5;

6. What are the order details (ProductID, Quantity) for customers from France?

SELECT 
	o.OrderID, 
	c.CustomerName, 
	c.Country, 
	od.ProductID, 
	od.Quantity
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
WHERE c.Country = 'France';

7. Area there products without a category assigned?

SELECT 
    ProductID, 
    ProductName,
    CategoryID
FROM Products
WHERE CategoryID IS NULL;

8. What are all orders and their employees?

SELECT 
    o.OrderID, 
    e.EmployeeID, 
    e.FirstName, 
    e.LastName
FROM Orders o
LEFT JOIN Employees e ON o.EmployeeID = e.EmployeeID;

9. What is the average, minimum, and maximum price of products? Round the values to 2 decimal places.

SELECT 
    ROUND(CAST(AVG(Price) AS NUMERIC), 2) AS AveragePrice,
    ROUND(CAST(MIN(Price) AS NUMERIC), 2) AS MinimumPrice,
    ROUND(CAST(MAX(Price) AS NUMERIC), 2) AS MaximumPrice
FROM Products;

10. What are the products with prices between 10 and 50? Round the price to 2 decimal places and sort the result by price in descending order.

SELECT 
    ProductID, 
    ProductName, 
    ROUND(CAST(Price AS NUMERIC), 2) AS Price
FROM Products
WHERE Price BETWEEN 10 AND 50
ORDER BY Price DESC;

11. What are the shippers and the total number of orders shipped by each shipper, including those with no orders?

SELECT 
    s.ShipperName, 
    COUNT(o.OrderID) AS TotalOrders
FROM Shippers s
LEFT JOIN Orders o ON s.ShipperID = o.ShipperID
GROUP BY s.ShipperName;

12. What are the employees who have processed > 5 orders? Sort the result by the number of orders in descending order.

SELECT 
	e.EmployeeID, 
	e.FirstName, 
	e.LastName, 
COUNT(o.OrderID) AS OrderCount
FROM Employees e
JOIN Orders o ON e.EmployeeID = o.EmployeeID
GROUP BY e.EmployeeID, e.FirstName, e.LastName
HAVING COUNT(o.OrderID) > 5
ORDER BY OrderCount DESC;

13. What is the total revenue for each product within each order, including the product name and ordered by order ID and total revenue in descending order?

SELECT 
	od.OrderID,
	p.ProductID,
	p.ProductName,
	ROUND(CAST(SUM(p.Price * od.Quantity) AS NUMERIC), 2) AS TotalRevenue
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY od.OrderID, p.ProductID, p.ProductName
ORDER BY od.OrderID, TotalRevenue DESC;

14. What are the customers, employees, and the total number of orders placed by each customer?

SELECT 
    c.CustomerID, 
    c.CustomerName, 
    e.EmployeeID, 
    e.FirstName, 
    e.LastName, 
    COUNT(o.OrderID) AS TotalOrders
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN Employees e ON o.EmployeeID = e.EmployeeID
GROUP BY c.CustomerID, c.CustomerName, e.EmployeeID, e.FirstName, e.LastName;


15. What are the products with an average price higher than the overall average product price? 
    Round the price to 2 decimal places and sort the result by price in descending order.

SELECT 
    ProductID, 
    ProductName, 
    ROUND(CAST(Price AS NUMERIC), 2) AS Price
FROM Products
WHERE Price > (SELECT AVG(Price) FROM Products)
ORDER BY Price DESC;

6. What are the total sales (quantity) for each product? Sort the result by total quantity in descending order.
SELECT 
    p.ProductID, 
    p.ProductName, 
    SUM(od.Quantity) AS TotalQuantity
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID, p.ProductName
ORDER BY TotalQuantity DESC;

17. What is the total revenue generated by each customer?
SELECT 
    c.CustomerID, 
    c.CustomerName, 
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY c.CustomerID, c.CustomerName
ORDER BY TotalRevenue DESC;

18. Which customers have placed no orders?
SELECT 
    c.CustomerID, 
    c.CustomerName
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE o.OrderID IS NULL;

19. Which products have never been ordered?
SELECT 
    p.ProductID, 
    p.ProductName
FROM Products p
LEFT JOIN OrderDetails od ON p.ProductID = od.ProductID
WHERE od.OrderID IS NULL;

20. What are the employees who have processed no orders?
SELECT 
    e.EmployeeID, 
    e.FirstName, 
    e.LastName
FROM Employees e
LEFT JOIN Orders o ON e.EmployeeID = o.EmployeeID
WHERE o.OrderID IS NULL;

21. What is the total revenue for each product category?
SELECT 
    c.CategoryID, 
    c.CategoryName, 
    SUM(p.Price * od.Quantity) AS TotalRevenue
FROM Products p
JOIN Categories c ON p.CategoryID = c.CategoryID
JOIN OrderDetails od ON p.ProductID = od.ProductID
GROUP BY c.CategoryID, c.CategoryName
ORDER BY TotalRevenue DESC;

22. What is the highest-priced product in each category?
SELECT 
    c.CategoryID, 
    c.CategoryName, 
    p.ProductName, 
    MAX(p.Price) AS MaxPrice
FROM Products p
JOIN Categories c ON p.CategoryID = c.CategoryID
GROUP BY c.CategoryID, c.CategoryName, p.ProductName
ORDER BY MaxPrice DESC;

23. What are the details of all orders placed in the year 2023?
SELECT 
    o.OrderID, 
    o.OrderDate, 
    c.CustomerName, 
    e.FirstName AS EmployeeFirstName, 
    e.LastName AS EmployeeLastName
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN Employees e ON o.EmployeeID = e.EmployeeID
WHERE EXTRACT(YEAR FROM o.OrderDate) = 2023;

24. What is the average order value for each customer?
SELECT 
    c.CustomerID, 
    c.CustomerName, 
    ROUND(AVG(od.Quantity * p.Price), 2) AS AverageOrderValue
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY c.CustomerID, c.CustomerName;


25. What are the products ordered by more than 10 different customers?
SELECT 
    p.ProductID, 
    p.ProductName, 
    COUNT(DISTINCT o.CustomerID) AS CustomerCount
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
JOIN Orders o ON od.OrderID = o.OrderID
GROUP BY p.ProductID, p.ProductName
HAVING COUNT(DISTINCT o.CustomerID) > 10;

26. Which customers placed their first order in 2023?
SELECT 
    c.CustomerID, 
    c.CustomerName, 
    MIN(o.OrderDate) AS FirstOrderDate
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
GROUP BY c.CustomerID, c.CustomerName
HAVING MIN(o.OrderDate) BETWEEN '2023-01-01' AND '2023-12-31';

27. What are the average, minimum, and maximum quantity ordered for each product?
SELECT 
    p.ProductID, 
    p.ProductName, 
    ROUND(AVG(od.Quantity), 2) AS AverageQuantity, 
    MIN(od.Quantity) AS MinQuantity, 
    MAX(od.Quantity) AS MaxQuantity
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID, p.ProductName;

28. What are the total number of products sold and the total revenue generated for each month in 2023?
SELECT 
    EXTRACT(MONTH FROM o.OrderDate) AS OrderMonth, 
    SUM(od.Quantity) AS TotalProductsSold, 
    SUM(od.Quantity * p.Price) AS TotalRevenue
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
WHERE EXTRACT(YEAR FROM o.OrderDate) = 2023
GROUP BY EXTRACT(MONTH FROM o.OrderDate)
ORDER BY OrderMonth;

29. What is the most ordered product in each month of 2023?
SELECT 
    EXTRACT(MONTH FROM o.OrderDate) AS OrderMonth, 
    p.ProductName, 
    SUM(od.Quantity) AS TotalQuantity
FROM Orders o
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
WHERE EXTRACT(YEAR FROM o.OrderDate) = 2023
GROUP BY EXTRACT(MONTH FROM o.OrderDate), p.ProductName
ORDER BY OrderMonth, TotalQuantity DESC;

30. Which customers have placed an order for more than 5 different products?
SELECT 
    c.CustomerID, 
    c.CustomerName, 
    COUNT(DISTINCT od.ProductID) AS ProductCount
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
GROUP BY c.CustomerID, c.CustomerName
HAVING COUNT(DISTINCT od.ProductID) > 5;
